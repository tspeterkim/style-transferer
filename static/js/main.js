"use strict";$(function(){$(".styleImagePicker").imagepicker();var e=document.getElementById("output");e.width=500,e.height=500;e.getContext("2d");$("#transfer").click(function(){function e(){$.ajax({url:"/api/checkTransferStatus",method:"GET",contentType:"application/json",success:function(e){if(null!=e.result){$("#processing").hide();var t=e.result[0],l=document.getElementById("output"),n=l.getContext("2d");v=new ImageData(new Uint8ClampedArray(e.result[1]),t[1],t[0]),n.putImageData(v,0,0)}},complete:function(t){null!=v?(clearTimeout(y),v=null):setTimeout(e,5e3)}})}var t="";if(""==$("#contentImageUrl").val())t="static/imgs/hollywood.jpg";else{var l=$("#contentImageUrl").val(),n=l.split("/"),o=n[n.length-1];console.log(l),$.ajax({url:"/api/download_img",method:"POST",contentType:"application/json",data:JSON.stringify({url:l}),success:function(e){console.log("successfully downloaded content img: "+e.img)}}),t="instance/"+o}var s="";if(""==$("#styleImageUrl").val())s="static/imgs/"+$(".styleImagePicker").val();else{var a=$("#styleImageUrl").val(),i=a.split("/"),c=i[i.length-1];$.ajax({url:"/api/download_img",method:"POST",contentType:"application/json",data:JSON.stringify({url:a}),success:function(e){console.log("successfully downloaded style img: "+e.img)}}),s="instance/"+c}var g=Number($("#contentSize").val()),r=Number($("#styleSize").val()),u=Number($("#contentWeight").val()),m=$("#styleWeights").val().split(",").map(Number),p=Number($("#tvWeight").val());console.log(t),console.log(s),console.log(g),console.log(r),console.log(u),console.log(m),console.log(p);var d={content_image:t,style_image:s,image_size:g,style_size:r,content_layer:3,content_weight:u,style_layers:[1,4,6,7],style_weights:m,tv_weight:p};$.ajax({url:"/api/styletransfer",method:"POST",contentType:"application/json",data:JSON.stringify(d),success:function(e){console.log(e.result)}}),$("#processing").show();var y=setTimeout(e,5e3),v=null})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
